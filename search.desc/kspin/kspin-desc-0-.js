searchState.loadedDescShard("kspin", 0, "kspin\nA spin lock providing mutually exclusive access to data.\nA guard that provides mutable data access.\nA spin lock that disables kernel preemption and local IRQs …\nA guard that provides mutable data access for <code>SpinNoIrq</code>.\nA spin lock that disables kernel preemption while trying …\nA guard that provides mutable data access for <code>SpinNoPreempt</code>…\nA raw spin lock that does nothing while trying to lock.\nA guard that provides mutable data access for <code>SpinRaw</code>.\nThe dropping of the <code>BaseSpinLockGuard</code> will release the …\nForce unlock this <code>BaseSpinLock</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a mutable reference to the underlying data.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this <code>BaseSpinLock</code> and unwraps the underlying data.\nReturns <code>true</code> if the lock is currently held.\nLocks the <code>BaseSpinLock</code> and returns a guard that permits …\nCreates a new <code>BaseSpinLock</code> wrapping the supplied data.\nTry to lock this <code>BaseSpinLock</code>, returning a lock guard if …")